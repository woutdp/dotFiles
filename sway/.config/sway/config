# Read `man 5 sway` for a complete reference.

### Variables
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term kitty

# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
output * bg ~/Pictures/Wallpapers/astronaut.png fill

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+w kill

# Start your launcher
bindsym $mod+d exec wofi --show drun
bindsym $mod+m exec /home/wout/scripts/wofi_wifi.sh

# Lockscreen
bindsym $mod+l exec /home/wout/scripts/swaylock.sh

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+0 exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Move your focus around
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Workspaces:
set $ws0 0
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9

bindsym $mod+Escape workspace $ws0
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9

# Move focused container to workspace
bindsym $mod+Ctrl+Escape move container to workspace $ws0
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9

# Move to workspace with focused container
bindsym $mod+Shift+Escape move container to workspace $ws0; workspace $ws0
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show


bindsym $mod+b exec google-chrome-stable
bindsym $mod+n exec nautilus
# bindsym Print exec flameshot gui

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Printscreen mode
set $printscreen_mode 'printscreen'
mode $printscreen_mode {
    bindsym s exec grim -t png -g "$(slurp -d)" - | wl-copy -t image/png && swaymsg 'mode "default"'
    bindsym f exec grim -t png - | wl-copy -t image/png && swaymsg 'mode "default"'
    bindsym w exec swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | grim -t png -g - - | wl-copy -t image/png && swaymsg 'mode "default"'
    bindsym o exec swaymsg -t get_tree | jq -r '.. | (.nodes? // empty)[] | select(.focused) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | grim -t png -g - - | wl-copy -t image/png && swaymsg 'mode "default"'

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# bindsym $mod+Print mode $printscreen_mode
bindsym $mod+Print exec wl-color-picker &
bindsym Print exec flameshot gui

for_window [app_id="kitty-nmtui"] floating enable
for_window [app_id="kruler"] floating enable
for_window [app_id="Nautilus"] floating enable

bar {
    mode hide
    swaybar_command /home/wout/scripts/waybar.sh
}

client.unfocused        #33332F #33332F #a89984 #a89984
client.focused          #fabd2f #fabd2f #282828 #282828
client.focused_inactive #333333 #5f676a #ffffff #484e50  #5f676a
client.urgent           #cc241d #cc241d #282828 #ffffff  #282828
client.placeholder      #000000 #0c0c0c #ffffff #000000  #0c0c0c
client.background       #ffffff

default_border pixel 1
default_floating_border pixel 1
smart_borders on
smart_gaps on
hide_edge_borders none

workspace_auto_back_and_forth yes

input type:touchpad {
    tap enabled
    natural_scroll enabled
    pointer_accel 0.6
    accel_profile adaptive
}

input type:keyboard {
    repeat_rate "75"
    repeat_delay "280"
}

# exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
# exec hash dbus-update-activation-environment 2>/dev/null && \
  # dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

include @sysconfdir@/sway/config.d/*

exec systemctl --user import-environment;
exec systemctl --user import-environment SWAYSOCK WAYLAND_DISPLAY;
